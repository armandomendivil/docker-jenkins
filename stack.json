{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Jenkins stack",
  "Parameters": {
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The target VPC Id"
    },
    "SubnetId": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The subnet Id"
    },
    "KeyName": {
      "Type": "String",
      "Description": "The key pair that is allowed SSH access"
    }
  },
  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-43d0f626",
        "InstanceType": "t2.micro",
        "SubnetId": { "Ref": "SubnetId" },
        "KeyName": { "Ref": "KeyName"},
        "SecurityGroupIds": [ { "Ref": "EC2InstanceSecurityGroup" } ],
        "IamInstanceProfile": { "Ref": "EC2InstanceProfile" },
        "UserData": {
          "Fn::Base64": {"Fn::Join": ["", [
            "#!/bin/bash\n",
            "echo ECS_CLUSTER=", { "Ref": "EcsCluster" }, " >> /etc/ecs/ecs.config\n",
            "groupadd -g 1000 jenkins\n",
            "useradd -u 1000 -g jenkins jenkins\n",
            "mkdir -p /ecs/jenkins_home\n",
            "chown -R jenkins:jenkins /ecs/jenkins_home\n"
            ]]}
        },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": ["", [ {"Ref": "AWS::StackName" }, "-instance" ] ] } } ]
      }
    },
    "EC2InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {"Fn::Join": ["", [ {"Ref": "AWS::StackName" }, " ingress Security Group" ] ] },
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "SourceSecurityGroupId": { "Ref": "ElbSecurityGroup" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "EC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "EC2InstanceRole" } ]
      }
    },
    "EC2InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role" ]
      }

    },
    "ElbSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {"Fn::Join": ["", [ {"Ref": "AWS::StackName" }, " ELB ingress Security Group" ] ] },
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": ["", [ {"Ref": "AWS::StackName" }, "-elb-sg" ] ] } } ]
      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "false",
        "SecurityGroups": [ { "Ref": "ElbSecurityGroup"} ],
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "8080",
            "Protocol": "http"
          }
        ],
        "Instances": [ { "Ref": "EC2Instance" } ],
        "Subnets": [ { "Ref": "SubnetId" } ]
      }
    },
    "EcsCluster": {
      "Type": "AWS::ECS::Cluster"
    },
    "EcsTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "jenkins",
            "Image": "klingan/jenkins:ecs",
            "Memory": 995,
            "PortMappings": [ { "ContainerPort": 8080, "HostPort": 8080 } ],
            "MountPoints": [
              {
                "SourceVolume": "docker",
                "ContainerPath": "/var/run/docker.sock"
              },
              {
                "SourceVolume": "jenkins_home",
                "ContainerPath": "/var/jenkins_home"
              }
            ]
          }
        ],
        "Volumes": [
          {
            "Name": "jenkins_home",
            "Host": { "SourcePath": "/ecs/jenkins_home" }
          },
          {
            "Name": "docker",
            "Host": {"SourcePath": "/var/run/docker.sock"}
          }
        ]
      }
    },
    "EcsService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": { "Ref": "EcsCluster" },
        "TaskDefinition": { "Ref": "EcsTaskDefinition" },
        "DesiredCount": 1
      }
    }
  },
  "Outputs": {
    "ElbDomainName": {
      "Description": "Public DNS name of Elastic Load Balancer",
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "DNSName"
        ]
      }
    },
    "ECSInstanceDomainName": {
      "Description": "Public DNS name of ECS Instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicDnsName"
        ]
      }
    }
  }
}
